# day21 0,1,2 sort

- DSA revision format
- **Name: 0,1,2 sort**
- **Platform:  gfg**
- **Difficulty: medium**
- **pattern :Dutch National Flag problem**

## **🔹 Problem Understanding:**

### Problem:

Given an array containing only 0s, 1s, and 2s, sort the array in-place in ascending order.

---

### ✅ Approach: **Dutch National Flag Algorithm**

### 🔧 Tools Used:

- 3 pointers: `low`, `mid`, `high`
- Single traversal (O(n))
- No extra space (O(1))

## **🔹 Edge Cases:**

**🔹 Code:**

```java
java
CopyEdit
// Your Java solution here
low = 0
mid = 0
high = n - 1

while (mid <= high):
    if arr[mid] == 0:
        swap(arr[low], arr[mid])
        low++
        mid++

    else if arr[mid] == 1:
        mid++

    else if arr[mid] == 2:
        swap(arr[mid], arr[high])
        high--

```

## **🔹 Learnings:**

⭐ Kya naya seekha?

- (Jo logic ya trick pehli baar samjhi ho)
- (Kaunsi galti hui thi, aur kaise sudhara)
    - Loop condition should be `mid <= high`, **not** `mid < n`
    - ❌ Don’t increment `mid` when swapping with `high` — because you need to recheck the new value at `mid`
- (Aage se kaise yaad rakhenge)

## **🔹 Revision Reminder:**
