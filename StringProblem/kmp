# Day18 kmp

- DSA revision format
- **Name: Search Pattern (KMP-Algorithm)**
- **Platform: gfg**
- **Difficulty: hard**
- **Topic:**

## **🔹 Problem Understanding:**

Given two strings, one is a text string **txt** and the other is a pattern string **pat**. The task is to print the indexes of **all the occurrences** of the pattern string in the text string. Use **0-based** indexing while returning the indices. Note: ****Return an empty list in case of no occurrences of pattern.

**Examples :**

```
Input:txt = "abcab", pat = "ab"
Output: [0, 3]
Explanation: The string "ab" occurs twice in txt, one starts at index 0 and the other at index 3.

```

```
Input: txt = "abesdu", pat = "edu"
Output: []
Explanation: There's no substring "edu" present in txt.
```

## **🔹 Approach / Logic:**

create LPSarray(pattern)

then search 

## **🔹 Edge Cases:**

**🔹 Code:**

```java
java
CopyEdit
// Your Java solution here
class Solution {
    public int[] LpsArray(String s){
        int n = s.length();
        int []lps = new int[n];
        int len = 0;
        int i = 1;
        while(i<n){
            if(s.charAt(i) == s.charAt(len)){
                len++;
                lps[i] = len;
                i++;
            }else{
                if(len != 0){
                    len = lps[len-1];
                    
                }else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
        return lps;
    }
    ArrayList<Integer> search(String pat, String txt) {
        // your code here
        ArrayList<Integer>al = new ArrayList<>();
        int n = pat.length();
        int m = txt.length();
        int i = 0; 
        int j = 0;
        
        int []lps = LpsArray(pat); 
        while(i<m){
            if(txt.charAt(i) == pat.charAt(j)){
                i++;
                j++;
            }
            if(j == n){
                al.add(i-j);
                j = lps[j-1];
            }else if(i<m && txt.charAt(i) != pat.charAt(j)){
                if(j!= 0){
                    j = lps[j-1];
                }else{
                    i++;
                }
            }
        }
        return al;
    }
}

```

## **🔹 Learnings:**

⭐ Kya naya seekha?

- (Jo logic ya trick pehli baar samjhi ho)
- (Kaunsi galti hui thi, aur kaise sudhara)
- (Aage se kaise yaad rakhenge)

## **🔹 Revision Reminder:**
